<!-- This is a launch file that runs the bare minimum requirements to get -->
<!-- gazebo running for a fixed-wing aircraft -->

<launch>
    <arg name="mav_name"            default="fixedwing"/>
    <arg name="open_reconfigure"    default="true" />
  
    <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="paused" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="verbose" value="false"/>
      <arg name="debug" value="false"/>
    </include> -->
  
    <!-- Spawn MAV -->
    <!-- <include file="$(find rosplane_sim)/launch/spawn_mav.launch">
      <arg name="mav_name"            value="$(arg mav_name)" />
      <arg name="model"               value="$(find rosplane_sim)/xacro/$(arg mav_name).xacro" />
    </include> -->
  
    <group ns="$(arg mav_name)">
      <!-- Load Global Parameters for this MAV -->
      <rosparam command="load" ns="autopilot" file="$(find rosplane_sim)/params/cessna_skyhawk.yaml"/>
  
      <node name="autopilot" pkg="rosplane" type="rosplane_controller" output="screen" >
        <remap from="state" to="xplane/state"/>
        <!-- <remap from="state" to="truth"/> -->
      </node>
  
      <!-- <node name="autopilot_tuner" pkg="rosplane" type="rosplane_controller_tuner" output="screen">
        <remap from="state" to="xplane/state"/>
        <remap from="state" to="truth"/>
      </node> -->
  
      <node name="estimator" pkg="rosplane" type="rosplane_estimator" output="screen"/>
      <!-- Must publish a status: armed to estimate states -->
      <node name="status_publisher" pkg="rostopic" type="rostopic" output="screen"
        args="pub status rosflight_msgs/Status '{header: {seq: 0, stamp: 0, frame_id: 'none'},
        armed: 'true', failsafe: 'false', rc_override: 'false', offboard: 'false',
        control_mode: 0, error_code: 0, num_errors: 0, loop_time_us: 0}'"/>
  
      <node name="pathfollower" pkg="rosplane" type="rosplane_path_follower" output="screen">
        <remap from="state" to="xplane/state"/>
        <!-- <remap from="state" to="truth"/> -->
      </node>
  
      <!-- <node name="current_path_publisher" pkg="rostopic" type="rostopic"
        args="pub current_path rosplane_msgs/Current_Path '0' '15.0'  '[0.0, 0.0, -100.0]'  '[1.0, 0.0, 0.0]'  '[0.0, 0.0, -100.0]'  '100.0' '1'"/> -->
  
      <node name="pathmanager" pkg="rosplane" type="rosplane_path_manager" >
        <remap from="state" to="xplane/state"/>
        <!-- <remap from="state" to="truth"/> -->
      </node>
  
      <!-- <node name="debugger" pkg="rosplane" type="rosplane_debugger" output="screen" /> -->
  
      <node name="pathplanner" pkg="rosplane" type="rosplane_path_planner" /> 
      <node name = "my_rqt_dashboard" pkg = "rqt_gui" type = "rqt_gui" respawn = "false" output = "screen" args = "--perspective-file $(find rosplane)/rqt_config/control_viz.perspective"/>
    </group>

    <group if="$(arg open_reconfigure)">
      <node pkg="rqt_reconfigure" type="rqt_reconfigure" name="rosplane_rqt_reconfigure" args="[/fixedwing/pathfollower,/fixedwing/autopilot]" />
    </group>
  </launch>
